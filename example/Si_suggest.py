#
#  Si_suggest.py
#
#  This is an example to run ALM in the suggest mode.
#

from alm import ALM
import numpy as np

lavec = [[20.406, 0, 0],
         [0, 20.406, 0],
         [0, 0, 20.406]]
xcoord = [[ 0.0000000000000000, 0.0000000000000000, 0.0000000000000000],
          [ 0.0000000000000000, 0.0000000000000000, 0.5000000000000000],
          [ 0.0000000000000000, 0.2500000000000000, 0.2500000000000000],
          [ 0.0000000000000000, 0.2500000000000000, 0.7500000000000000],
          [ 0.0000000000000000, 0.5000000000000000, 0.0000000000000000],
          [ 0.0000000000000000, 0.5000000000000000, 0.5000000000000000],
          [ 0.0000000000000000, 0.7500000000000000, 0.2500000000000000],
          [ 0.0000000000000000, 0.7500000000000000, 0.7500000000000000],
          [ 0.1250000000000000, 0.1250000000000000, 0.1250000000000000],
          [ 0.1250000000000000, 0.1250000000000000, 0.6250000000000000],
          [ 0.1250000000000000, 0.3750000000000000, 0.3750000000000000],
          [ 0.1250000000000000, 0.3750000000000000, 0.8750000000000000],
          [ 0.1250000000000000, 0.6250000000000000, 0.1250000000000000],
          [ 0.1250000000000000, 0.6250000000000000, 0.6250000000000000],
          [ 0.1250000000000000, 0.8750000000000000, 0.3750000000000000],
          [ 0.1250000000000000, 0.8750000000000000, 0.8750000000000000],
          [ 0.2500000000000000, 0.0000000000000000, 0.2500000000000000],
          [ 0.2500000000000000, 0.0000000000000000, 0.7500000000000000],
          [ 0.2500000000000000, 0.2500000000000000, 0.0000000000000000],
          [ 0.2500000000000000, 0.2500000000000000, 0.5000000000000000],
          [ 0.2500000000000000, 0.5000000000000000, 0.2500000000000000],
          [ 0.2500000000000000, 0.5000000000000000, 0.7500000000000000],
          [ 0.2500000000000000, 0.7500000000000000, 0.0000000000000000],
          [ 0.2500000000000000, 0.7500000000000000, 0.5000000000000000],
          [ 0.3750000000000000, 0.1250000000000000, 0.3750000000000000],
          [ 0.3750000000000000, 0.1250000000000000, 0.8750000000000000],
          [ 0.3750000000000000, 0.3750000000000000, 0.1250000000000000],
          [ 0.3750000000000000, 0.3750000000000000, 0.6250000000000000],
          [ 0.3750000000000000, 0.6250000000000000, 0.3750000000000000],
          [ 0.3750000000000000, 0.6250000000000000, 0.8750000000000000],
          [ 0.3750000000000000, 0.8750000000000000, 0.1250000000000000],
          [ 0.3750000000000000, 0.8750000000000000, 0.6250000000000000],
          [ 0.5000000000000000, 0.0000000000000000, 0.0000000000000000],
          [ 0.5000000000000000, 0.0000000000000000, 0.5000000000000000],
          [ 0.5000000000000000, 0.2500000000000000, 0.2500000000000000],
          [ 0.5000000000000000, 0.2500000000000000, 0.7500000000000000],
          [ 0.5000000000000000, 0.5000000000000000, 0.0000000000000000],
          [ 0.5000000000000000, 0.5000000000000000, 0.5000000000000000],
          [ 0.5000000000000000, 0.7500000000000000, 0.2500000000000000],
          [ 0.5000000000000000, 0.7500000000000000, 0.7500000000000000],
          [ 0.6250000000000000, 0.1250000000000000, 0.1250000000000000],
          [ 0.6250000000000000, 0.1250000000000000, 0.6250000000000000],
          [ 0.6250000000000000, 0.3750000000000000, 0.3750000000000000],
          [ 0.6250000000000000, 0.3750000000000000, 0.8750000000000000],
          [ 0.6250000000000000, 0.6250000000000000, 0.1250000000000000],
          [ 0.6250000000000000, 0.6250000000000000, 0.6250000000000000],
          [ 0.6250000000000000, 0.8750000000000000, 0.3750000000000000],
          [ 0.6250000000000000, 0.8750000000000000, 0.8750000000000000],
          [ 0.7500000000000000, 0.0000000000000000, 0.2500000000000000],
          [ 0.7500000000000000, 0.0000000000000000, 0.7500000000000000],
          [ 0.7500000000000000, 0.2500000000000000, 0.0000000000000000],
          [ 0.7500000000000000, 0.2500000000000000, 0.5000000000000000],
          [ 0.7500000000000000, 0.5000000000000000, 0.2500000000000000],
          [ 0.7500000000000000, 0.5000000000000000, 0.7500000000000000],
          [ 0.7500000000000000, 0.7500000000000000, 0.0000000000000000],
          [ 0.7500000000000000, 0.7500000000000000, 0.5000000000000000],
          [ 0.8750000000000000, 0.1250000000000000, 0.3750000000000000],
          [ 0.8750000000000000, 0.1250000000000000, 0.8750000000000000],
          [ 0.8750000000000000, 0.3750000000000000, 0.1250000000000000],
          [ 0.8750000000000000, 0.3750000000000000, 0.6250000000000000],
          [ 0.8750000000000000, 0.6250000000000000, 0.3750000000000000],
          [ 0.8750000000000000, 0.6250000000000000, 0.8750000000000000],
          [ 0.8750000000000000, 0.8750000000000000, 0.1250000000000000],
          [ 0.8750000000000000, 0.8750000000000000, 0.6250000000000000]]

kd = [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
      14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
      14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
      14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14];

# alm.alm_new() and alm.alm_delete() are done by 'with' statement
with ALM(lavec, xcoord, kd, 1) as alm:
    alm.set_cutoff_radii([-1])
    alm.run_suggest()
    print(alm.get_atom_mapping_by_pure_translations())
    print(alm.get_displacement_patterns(1))
